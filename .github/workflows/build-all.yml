name: build-all

on:
  workflow_call:
    inputs:
      node-version:
        type: string
        default: '18'
        description: 'The version of Node.js to use'
      python-version:
        type: string
        default: '3.12'
        description: 'The version of Python to use'
      version:
        type: string
        required: true
        description: 'The version of the firmware'
      board-matrix:
        type: string
        required: true
        description: 'A JSON matrix of boards to build for'

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            frontend

      - uses: ./.github/actions/build-frontend
        with:
          node-version: ${{ inputs.node-version }}

  build-staticfs:
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-staticfs
        with:
          python-version: ${{ inputs.python-version }}
          skip-checkout: true

  build-firmware:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.board-matrix) }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-firmware
        with:
          python-version: ${{ inputs.python-version }}
          board: ${{ matrix.board }}
          version: ${{ inputs.version }}
          skip-checkout: true

  merge-partitions:
    runs-on: ubuntu-latest
    needs: [build-staticfs, build-firmware]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.board-matrix) }}

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            scripts
            boards
            chips

      - uses: ./.github/actions/merge-partitions
        with:
          python-version: ${{ inputs.python-version }}
          board: ${{ matrix.board }}
          skip-checkout: true
