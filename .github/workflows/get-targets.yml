
# This is a bit of a silly workflow, but Github Workflow definitions
# do not let us easily reuse the strategy matrix used to trigger jobs
# per-board. This is a workaround to define everything in one file, and
# use the output in the multiple places we need it.
#
# Source: https://github.com/orgs/community/discussions/26284#discussioncomment-6701976

on:
  workflow_call:
    outputs:
      board-list:
        description: "Newline-separated list of boards"
        value: ${{ jobs.get-targets.outputs.board-list }}
      board-array:
        description: "JSON array of boards"
        value: ${{ jobs.get-targets.outputs.board-array }}
      matrix:
        description: "Strategy matrix with a single key 'board', containing a list of all boards."
        value: ${{ jobs.get-targets.outputs.matrix }}

name: targets

jobs:
  get-targets:
    runs-on: ubuntu-latest
    outputs:
      board-array: ${{ steps.board-array.outputs.array }}
      board-list: ${{ steps.board-list.outputs.list }}
      matrix: ${{ steps.matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: platformio.ini

      # There's a lot going on here, so bear with me.
      #
      # sed:
      #   -n                              Suppresses normal output,
      #   "s/^\[env:\(.*\)]$/\1           Substitutes "[env:...]" with whatever value is at "..."
      #   /p"                             Prints out the substituted value (i.e. the value of "...")
      #   platformio.ini                  Reading from this file.
      #
      # jq:
      #   "--raw-input --slurp"           Takes the previous output,
      #   -c                              Output in compact mode (no newlines or unnecessary spaces),
      #   split("\n")                     Splits it by line, turning it into an array,
      #   [ .[] | select(length > 0)      Filters out empty lines (there is an empty trailing line usually),
      #         | select(. != "fs") ]     Filters out the "fs" entry since that's only for building the filesystem,
      #   { board: ... }                  Wraps the whole thing into a JSON object with only a "board" key
      #                                   and the array in question as value.
      #
      # echo "matrix=$(...)" >> $GITHUB_OUTPUT    Sets the value as job output with name "matrix".
      #
      # Referenced: https://unix.stackexchange.com/a/278377
      # Referenced: https://github.com/jqlang/jq/issues/563
      - name: Extract board array
        id: board-array
        run: |
          echo "array=$(sed -n "s/^\[env:\(.*\)]$/\1/p" platformio.ini | jq --raw-input --slurp -c 'split("\n") | [ .[] | select(length > 0) | select(. != "fs") ]')" >> $GITHUB_OUTPUT

      - name: Build strategy matrix
        id: matrix
        run: |
          echo "matrix=$(echo '${{ steps.board-array.outputs.array }}' | jq -c '{ board: . }')" >> $GITHUB_OUTPUT

      - name: Build board list
        id: board-list
        run: |
          echo "list<<EOF" >> $GITHUB_OUTPUT
          echo "$(echo '${{ steps.board-array.outputs.array }}' | jq -r '. | join("\n")' | sed 's|\\n|\n|g')" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
