// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_WIFISCANSTATUS_OPENSHOCK_SERIALIZATION_TYPES_H_
#define FLATBUFFERS_GENERATED_WIFISCANSTATUS_OPENSHOCK_SERIALIZATION_TYPES_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 5 &&
              FLATBUFFERS_VERSION_REVISION == 26,
             "Non-compatible flatbuffers version included");

namespace OpenShock {
namespace Serialization {
namespace Types {

enum class WifiScanStatus : uint8_t {
  Started = 0,
  InProgress = 1,
  Completed = 2,
  Aborted = 3,
  Error = 4,
  MIN = Started,
  MAX = Error
};

inline const WifiScanStatus (&EnumValuesWifiScanStatus())[5] {
  static const WifiScanStatus values[] = {
    WifiScanStatus::Started,
    WifiScanStatus::InProgress,
    WifiScanStatus::Completed,
    WifiScanStatus::Aborted,
    WifiScanStatus::Error
  };
  return values;
}

inline const char * const *EnumNamesWifiScanStatus() {
  static const char * const names[6] = {
    "Started",
    "InProgress",
    "Completed",
    "Aborted",
    "Error",
    nullptr
  };
  return names;
}

inline const char *EnumNameWifiScanStatus(WifiScanStatus e) {
  if (::flatbuffers::IsOutRange(e, WifiScanStatus::Started, WifiScanStatus::Error)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesWifiScanStatus()[index];
}

}  // namespace Types
}  // namespace Serialization
}  // namespace OpenShock

#endif  // FLATBUFFERS_GENERATED_WIFISCANSTATUS_OPENSHOCK_SERIALIZATION_TYPES_H_
