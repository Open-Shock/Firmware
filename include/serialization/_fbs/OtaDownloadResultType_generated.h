// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_OTADOWNLOADRESULTTYPE_OPENSHOCK_H_
#define FLATBUFFERS_GENERATED_OTADOWNLOADRESULTTYPE_OPENSHOCK_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 5 &&
              FLATBUFFERS_VERSION_REVISION == 26,
             "Non-compatible flatbuffers version included");

namespace OpenShock {

enum class OtaDownloadResultType : uint8_t {
  OK = 0,
  FAIL = 1,
  MIN = OK,
  MAX = FAIL
};

inline const OtaDownloadResultType (&EnumValuesOtaDownloadResultType())[2] {
  static const OtaDownloadResultType values[] = {
    OtaDownloadResultType::OK,
    OtaDownloadResultType::FAIL
  };
  return values;
}

inline const char * const *EnumNamesOtaDownloadResultType() {
  static const char * const names[3] = {
    "OK",
    "FAIL",
    nullptr
  };
  return names;
}

inline const char *EnumNameOtaDownloadResultType(OtaDownloadResultType e) {
  if (::flatbuffers::IsOutRange(e, OtaDownloadResultType::OK, OtaDownloadResultType::FAIL)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesOtaDownloadResultType()[index];
}

}  // namespace OpenShock

#endif  // FLATBUFFERS_GENERATED_OTADOWNLOADRESULTTYPE_OPENSHOCK_H_
