// automatically generated by the FlatBuffers compiler, do not modify

import { KeepAlive } from '../../open-shock/serialization/keep-alive';
import { OtaDownloadResult } from '../../open-shock/serialization/ota-download-result';
import { OtaInstallResult } from '../../open-shock/serialization/ota-install-result';


export enum DeviceToServerMessagePayload {
  NONE = 0,
  KeepAlive = 1,
  OtaDownloadResult = 2,
  OtaInstallResult = 3
}

export function unionToDeviceToServerMessagePayload(
  type: DeviceToServerMessagePayload,
  accessor: (obj:KeepAlive|OtaDownloadResult|OtaInstallResult) => KeepAlive|OtaDownloadResult|OtaInstallResult|null
): KeepAlive|OtaDownloadResult|OtaInstallResult|null {
  switch(DeviceToServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(new KeepAlive())! as KeepAlive;
    case 'OtaDownloadResult': return accessor(new OtaDownloadResult())! as OtaDownloadResult;
    case 'OtaInstallResult': return accessor(new OtaInstallResult())! as OtaInstallResult;
    default: return null;
  }
}

export function unionListToDeviceToServerMessagePayload(
  type: DeviceToServerMessagePayload, 
  accessor: (index: number, obj:KeepAlive|OtaDownloadResult|OtaInstallResult) => KeepAlive|OtaDownloadResult|OtaInstallResult|null, 
  index: number
): KeepAlive|OtaDownloadResult|OtaInstallResult|null {
  switch(DeviceToServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(index, new KeepAlive())! as KeepAlive;
    case 'OtaDownloadResult': return accessor(index, new OtaDownloadResult())! as OtaDownloadResult;
    case 'OtaInstallResult': return accessor(index, new OtaInstallResult())! as OtaInstallResult;
    default: return null;
  }
}
