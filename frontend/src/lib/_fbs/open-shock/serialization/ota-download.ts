// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { SemVer } from '../../open-shock/sem-ver.js';


export class OtaDownload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaDownload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOtaDownload(bb:flatbuffers.ByteBuffer, obj?:OtaDownload):OtaDownload {
  return (obj || new OtaDownload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOtaDownload(bb:flatbuffers.ByteBuffer, obj?:OtaDownload):OtaDownload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OtaDownload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

version(obj?:SemVer):SemVer|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SemVer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startOtaDownload(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addVersion(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, versionOffset, 0);
}

static endOtaDownload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOtaDownload(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset):flatbuffers.Offset {
  OtaDownload.startOtaDownload(builder);
  OtaDownload.addVersion(builder, versionOffset);
  return OtaDownload.endOtaDownload(builder);
}
}
