// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ShockerCommandType } from '../../../open-shock/serialization/types/shocker-command-type';
import { ShockerModelType } from '../../../open-shock/serialization/types/shocker-model-type';


export class ShockerCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ShockerCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsShockerCommand(bb:flatbuffers.ByteBuffer, obj?:ShockerCommand):ShockerCommand {
  return (obj || new ShockerCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsShockerCommand(bb:flatbuffers.ByteBuffer, obj?:ShockerCommand):ShockerCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ShockerCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

model():ShockerModelType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ShockerModelType.CaiXianlin;
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

type():ShockerCommandType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ShockerCommandType.Stop;
}

intensity():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

duration():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startShockerCommand(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addModel(builder:flatbuffers.Builder, model:ShockerModelType) {
  builder.addFieldInt8(0, model, ShockerModelType.CaiXianlin);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt16(1, id, 0);
}

static addType(builder:flatbuffers.Builder, type:ShockerCommandType) {
  builder.addFieldInt8(2, type, ShockerCommandType.Stop);
}

static addIntensity(builder:flatbuffers.Builder, intensity:number) {
  builder.addFieldInt8(3, intensity, 0);
}

static addDuration(builder:flatbuffers.Builder, duration:number) {
  builder.addFieldInt16(4, duration, 0);
}

static endShockerCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createShockerCommand(builder:flatbuffers.Builder, model:ShockerModelType, id:number, type:ShockerCommandType, intensity:number, duration:number):flatbuffers.Offset {
  ShockerCommand.startShockerCommand(builder);
  ShockerCommand.addModel(builder, model);
  ShockerCommand.addId(builder, id);
  ShockerCommand.addType(builder, type);
  ShockerCommand.addIntensity(builder, intensity);
  ShockerCommand.addDuration(builder, duration);
  return ShockerCommand.endShockerCommand(builder);
}
}
