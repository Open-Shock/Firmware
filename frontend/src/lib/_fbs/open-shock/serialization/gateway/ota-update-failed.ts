// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class OtaUpdateFailed {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OtaUpdateFailed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOtaUpdateFailed(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateFailed):OtaUpdateFailed {
  return (obj || new OtaUpdateFailed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOtaUpdateFailed(bb:flatbuffers.ByteBuffer, obj?:OtaUpdateFailed):OtaUpdateFailed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OtaUpdateFailed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

updateId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

fatal():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startOtaUpdateFailed(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUpdateId(builder:flatbuffers.Builder, updateId:number) {
  builder.addFieldInt32(0, updateId, 0);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
}

static addFatal(builder:flatbuffers.Builder, fatal:boolean) {
  builder.addFieldInt8(2, +fatal, +false);
}

static endOtaUpdateFailed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOtaUpdateFailed(builder:flatbuffers.Builder, updateId:number, messageOffset:flatbuffers.Offset, fatal:boolean):flatbuffers.Offset {
  OtaUpdateFailed.startOtaUpdateFailed(builder);
  OtaUpdateFailed.addUpdateId(builder, updateId);
  OtaUpdateFailed.addMessage(builder, messageOffset);
  OtaUpdateFailed.addFatal(builder, fatal);
  return OtaUpdateFailed.endOtaUpdateFailed(builder);
}
}
