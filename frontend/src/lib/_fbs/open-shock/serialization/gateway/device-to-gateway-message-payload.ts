// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { KeepAlive } from '../../../open-shock/serialization/gateway/keep-alive';
import { OtaInstallFailed } from '../../../open-shock/serialization/gateway/ota-install-failed';
import { OtaInstallProgress } from '../../../open-shock/serialization/gateway/ota-install-progress';
import { OtaInstallStarted } from '../../../open-shock/serialization/gateway/ota-install-started';


export enum DeviceToGatewayMessagePayload {
  NONE = 0,
  KeepAlive = 1,
  OtaInstallStarted = 2,
  OtaInstallProgress = 3,
  OtaInstallFailed = 4
}

export function unionToDeviceToGatewayMessagePayload(
  type: DeviceToGatewayMessagePayload,
  accessor: (obj:KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted) => KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted|null
): KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted|null {
  switch(DeviceToGatewayMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(new KeepAlive())! as KeepAlive;
    case 'OtaInstallStarted': return accessor(new OtaInstallStarted())! as OtaInstallStarted;
    case 'OtaInstallProgress': return accessor(new OtaInstallProgress())! as OtaInstallProgress;
    case 'OtaInstallFailed': return accessor(new OtaInstallFailed())! as OtaInstallFailed;
    default: return null;
  }
}

export function unionListToDeviceToGatewayMessagePayload(
  type: DeviceToGatewayMessagePayload, 
  accessor: (index: number, obj:KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted) => KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted|null, 
  index: number
): KeepAlive|OtaInstallFailed|OtaInstallProgress|OtaInstallStarted|null {
  switch(DeviceToGatewayMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(index, new KeepAlive())! as KeepAlive;
    case 'OtaInstallStarted': return accessor(index, new OtaInstallStarted())! as OtaInstallStarted;
    case 'OtaInstallProgress': return accessor(index, new OtaInstallProgress())! as OtaInstallProgress;
    case 'OtaInstallFailed': return accessor(index, new OtaInstallFailed())! as OtaInstallFailed;
    default: return null;
  }
}
