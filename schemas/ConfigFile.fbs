namespace OpenShock.Serialization.Configuration;

table RFConfig {
  /// The GPIO pin connected to the RF modulator's data pin for transmitting (TX)
  tx_pin:uint8;

  /// Whether to transmit keepalive messages to keep the devices from entering sleep mode
  keepalive_enabled:bool;
}

table WiFiCredentials {
  /// ID of the WiFi network credentials, used for referencing the credentials with a low memory footprint
  id:uint8;

  /// SSID of the WiFi network
  ssid:string;

  /// Password of the WiFi network
  password:string;
}

table WiFiConfig {
  /// Access point SSID
  ap_ssid:string;

  /// Device hostname
  hostname:string;

  /// WiFi network credentials
  credentials:[WiFiCredentials];
}

table CaptivePortalConfig {
  /// Whether the captive portal is forced to be enabled
  /// The captive portal will otherwise shut down when a gateway connection is established
  always_enabled:bool;
}

table BackendConfig {
  /// Domain name of the backend server, e.g. "api.shocklink.net"
  domain:string;

  /// Authentication token for the backend server
  auth_token:string;
}

table SerialInputConfig {
  /// Whether to echo typed characters back to the serial console
  echo_enabled:bool = true;
}

// Represents configuration for Over-The-Air (OTA) updates.
table OtaUpdateConfig {
  /// Indicates whether OTA updates are enabled.
  is_enabled:bool;

  /// The domain name of the OTA Content Delivery Network (CDN).
  cdn_domain:string;

  /// The update channel to use, e.g. "stable", "beta", "dev".
  update_channel:string;

  /// Indicates whether to check for updates on startup.
  check_on_startup:bool;

  /// The interval between update checks in minutes, 0 to disable automatic update checks. ( 5 minutes minimum )
  check_interval:uint16;

  /// Indicates if the backend is authorized to manage the device's update version on behalf of the user.
  allow_backend_management:bool;

  /// Indicates if manual approval via serial input or captive portal is required before installing updates.
  require_manual_approval:bool;
}

table Config {
  /// RF Transmitter configuration
  rf:RFConfig;

  /// WiFi configuration
  wifi:WiFiConfig;

  /// Captive portal configuration
  captive_portal:CaptivePortalConfig;

  /// Backend configuration
  backend:BackendConfig;

  /// Serial input configuration
  serial_input:SerialInputConfig;

  /// OTA update configuration
  ota_update:OtaUpdateConfig;
}
