// automatically generated by the FlatBuffers compiler, do not modify

import { KeepAlive } from '../../open-shock/serialization/keep-alive.js';


export enum DeviceToServerMessagePayload {
  NONE = 0,
  KeepAlive = 1
}

export function unionToDeviceToServerMessagePayload(
  type: DeviceToServerMessagePayload,
  accessor: (obj:KeepAlive) => KeepAlive|null
): KeepAlive|null {
  switch(DeviceToServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(new KeepAlive())! as KeepAlive;
    default: return null;
  }
}

export function unionListToDeviceToServerMessagePayload(
  type: DeviceToServerMessagePayload, 
  accessor: (index: number, obj:KeepAlive) => KeepAlive|null, 
  index: number
): KeepAlive|null {
  switch(DeviceToServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'KeepAlive': return accessor(index, new KeepAlive())! as KeepAlive;
    default: return null;
  }
}
