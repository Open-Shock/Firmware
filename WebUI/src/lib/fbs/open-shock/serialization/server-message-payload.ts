// automatically generated by the FlatBuffers compiler, do not modify

import { CaptivePortalConfig } from '../../open-shock/serialization/captive-portal-config.js';
import { ShockerCommandList } from '../../open-shock/serialization/shocker-command-list.js';


export enum ServerMessagePayload {
  NONE = 0,
  ShockerCommandList = 1,
  CaptivePortalConfig = 2
}

export function unionToServerMessagePayload(
  type: ServerMessagePayload,
  accessor: (obj:CaptivePortalConfig|ShockerCommandList) => CaptivePortalConfig|ShockerCommandList|null
): CaptivePortalConfig|ShockerCommandList|null {
  switch(ServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'ShockerCommandList': return accessor(new ShockerCommandList())! as ShockerCommandList;
    case 'CaptivePortalConfig': return accessor(new CaptivePortalConfig())! as CaptivePortalConfig;
    default: return null;
  }
}

export function unionListToServerMessagePayload(
  type: ServerMessagePayload, 
  accessor: (index: number, obj:CaptivePortalConfig|ShockerCommandList) => CaptivePortalConfig|ShockerCommandList|null, 
  index: number
): CaptivePortalConfig|ShockerCommandList|null {
  switch(ServerMessagePayload[type]) {
    case 'NONE': return null; 
    case 'ShockerCommandList': return accessor(index, new ShockerCommandList())! as ShockerCommandList;
    case 'CaptivePortalConfig': return accessor(index, new CaptivePortalConfig())! as CaptivePortalConfig;
    default: return null;
  }
}
